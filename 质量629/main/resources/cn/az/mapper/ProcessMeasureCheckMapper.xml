<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.az.mapper.ProcessMeasureCheckMapper">

	<!--employee.emp_id,
	employee.emp_name,
	process_measure_check.p_measure_check_id,
	process_measure_check.process_id,
	process_measure_check.check_item,
	process_measure_check.cdate,
	process_measure_check.measure_data,
	process_measure_check.emp_id,
	process_measure_check.result,
	process_measure_check.note-->

<!--	private String pMeasureCheckId;
	private String processId;
	private String checkItem;
	private Date cdate;
	private String measureData;
	private String empId;
	private String empName;
	private String result;
	private String note;-->

	<resultMap id="selectmap" type="cn.az.bean.ProcessMeasureCheck">
		<id column="p_measure_check_id" jdbcType="VARCHAR" property="pMeasureCheckId" />
		<result column="process_id" jdbcType="VARCHAR" property="processId" />
		<result column="check_item" jdbcType="VARCHAR" property="checkItem" />
		<result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
		<result column="measure_data" jdbcType="VARCHAR" property="measureData" />
		<result column="emp_id" jdbcType="VARCHAR" property="empId" />
		<result column="result" jdbcType="VARCHAR" property="result" />
		<result column="note" jdbcType="VARCHAR" property="note" />
		<result column="emp_Name" jdbcType="VARCHAR" property="empName" />
	</resultMap>



	<!--新增-->
	<insert id="insert" parameterType="cn.az.bean.ProcessMeasureCheck">
			 insert into  process_measure_check
		  values (#{pMeasureCheckId},#{processId},#{checkItem},#{cdate},
			#{measureData},#{empId},#{result},#{note}
	</insert>

	<!--修改-->
	<update id="updateAll" parameterType="cn.az.bean.ProcessMeasureCheck">
			update process_measure_check set
				p_measure_check_id=#{pMeasureCheckId},
				process_id=#{processId},
				check_item=#{checkItem},
				cdate=#{cdate},
				measure_data=#{measureData},
				emp_id=#{empId},
				result=#{result},
				note=#{note}
			where p_measure_check_id= #{pMeasureCheckId}
	</update>

	<!--修改note-->
	<update id="updateOne" parameterType="cn.az.bean.ProcessMeasureCheck">
			update process_measure_check set
				note=#{note}
			where p_measure_check_id= #{pMeasureCheckId}
	</update>

	<!--删除
    <delete id="deleteBatch" parameterType="string">
        delete from final_count_check where f_count_check_id= #{ids}
    </delete>-->
	<!--删除-->
	<delete id="deleteBatch" parameterType="string">
		delete from process_measure_check where p_measure_check_id in
		<foreach collection="array" separator="," item="ids" open="(" close=")">
			#{ids}
		</foreach>

	</delete>

	<!--查询-->
	<select id="selectAll" resultMap="selectmap">
SELECT
employee.emp_id,
employee.emp_name,
process_measure_check.p_measure_check_id,
process_measure_check.process_id,
process_measure_check.check_item,
process_measure_check.cdate,
process_measure_check.measure_data,
process_measure_check.emp_id,
process_measure_check.result,
process_measure_check.note
FROM
process_measure_check ,
employee
where employee.emp_id=process_measure_check.emp_id
	</select>
	<!--//查询id-->
	<select id="selectById" parameterType="string" resultType="cn.az.bean.ProcessMeasureCheck">
		select * from process_measure_check where p_measure_check_id= #{ids}
	</select>



	<!--查询by value 多表1-->
	<select id="selectRightOne" resultMap="selectmap">
		SELECT
employee.emp_id,
employee.emp_name,
process_measure_check.p_measure_check_id,
process_measure_check.process_id,
process_measure_check.check_item,
process_measure_check.cdate,
process_measure_check.measure_data,
process_measure_check.emp_id,
process_measure_check.result,
process_measure_check.note
FROM
process_measure_check ,
employee
where employee.emp_id=process_measure_check.emp_id
and process_measure_check.p_measure_check_id like CONCAT('%', #{searchValueint}, '%')


	</select>

	<!--查询by value 多表2
	<select id="selectRightTwo" resultMap="selectmap">
				SELECT
employee.emp_name,
final_measuret_check.f_measure_check_id,
final_measuret_check.order_id,
final_measuret_check.check_item,
final_measuret_check.cdate,
final_measuret_check.measure_data,
final_measuret_check.emp_id,
final_measuret_check.result,
final_measuret_check.note
FROM
final_measuret_check ,
employee
where final_measuret_check.emp_id =employee.emp_id and final_measuret_check.order_id like CONCAT('%', #{searchValueint}, '%')
	</select>-->


</mapper>
